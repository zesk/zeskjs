"use strict";

/**
 * Copyright &copy; 2017 Market Acumen, Inc.
 */
var $ = require("jquery");
var Zesk = require("./Zesk");

var URL = function URL(mixed) {
	"use strict";

	var self = this;
	$.each(this.keys, function () {
		self[this] = null;
	});
	if (is_object(mixed)) {
		$.each(this.keys, function () {
			if (mixed[this]) {
				self[this] = mixed[this];
			}
		});
	} else if (zesk.is_url(mixed)) {
		this.parse(mixed);
	} else if (zesk.is_string(mixed)) {
		this.path = mixed;
	}
};
$.extend(URL.prototype, {
	keys: ["url", "scheme", "user", "pass", "host", "port", "path", "query", "hash"],
	_query: function _query(mixed) {
		if (mixed === undefined) {
			return this.query || null;
		}
		if (zesk.is_string(mixed)) {
			if (mixed.charAt(0) !== "?") {
				mixed = "?" + mixed;
			}
		} else if (zesk.is_object(mixed)) {
			var items = [];
			$.each(mixed, function (k) {
				if (this === null || this === undefined || this === "") {
					return;
				}
				items.push(encodeURIComponent(k) + "=" + encodeURIComponent(this));
			});
			mixed = "?" + items.join("&");
		}
		this.query = mixed;
		this.unparse();
		return this;
	},
	default_port: function default_port() {
		var ports = {
			http: 80,
			https: 443,
			ftp: 21
		};
		return ports[this.scheme] || null;
	},
	parse: function parse(url) {
		var parser = d.createElement("a");
		parser.href = url;
		this.url = url;
		this.scheme = String(parser.protocol).replace(/:$/, "");
		this.host = parser.hostname;
		this.port = parser.port;
		this.path = parser.pathname;
		this.query = parser.search;
		this.hash = parser.hash;
		return this;
	},
	unparse: function unparse() {
		var user = this.user ? this.user + (this.pass ? ":" + this.pass : "") + "@" : "";
		var port = this.port ? this.port === this.default_port() ? "" : ":" + this.port : "";
		var prefix = this.scheme ? this.scheme + ":" : "";
		var uhp = this.host ? "//" + user + this.host + port : "";
		this.url = prefix + uhp + this.path + this.query + (this.hash ? this.hash : "");
		return this.url;
	}
});
module.exports = URL;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9VUkwuanMiXSwibmFtZXMiOlsiJCIsInJlcXVpcmUiLCJaZXNrIiwiVVJMIiwibWl4ZWQiLCJzZWxmIiwiZWFjaCIsImtleXMiLCJpc19vYmplY3QiLCJ6ZXNrIiwiaXNfdXJsIiwicGFyc2UiLCJpc19zdHJpbmciLCJwYXRoIiwiZXh0ZW5kIiwicHJvdG90eXBlIiwiX3F1ZXJ5IiwidW5kZWZpbmVkIiwicXVlcnkiLCJjaGFyQXQiLCJpdGVtcyIsImsiLCJwdXNoIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwiam9pbiIsInVucGFyc2UiLCJkZWZhdWx0X3BvcnQiLCJwb3J0cyIsImh0dHAiLCJodHRwcyIsImZ0cCIsInNjaGVtZSIsInVybCIsInBhcnNlciIsImQiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsIlN0cmluZyIsInByb3RvY29sIiwicmVwbGFjZSIsImhvc3QiLCJob3N0bmFtZSIsInBvcnQiLCJwYXRobmFtZSIsInNlYXJjaCIsImhhc2giLCJ1c2VyIiwicGFzcyIsInByZWZpeCIsInVocCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUdBLElBQU1BLElBQUlDLFFBQVEsUUFBUixDQUFWO0FBQ0EsSUFBTUMsT0FBT0QsUUFBUSxRQUFSLENBQWI7O0FBRUEsSUFBSUUsTUFBTSxTQUFOQSxHQUFNLENBQVNDLEtBQVQsRUFBZ0I7QUFDekI7O0FBQ0EsS0FBSUMsT0FBTyxJQUFYO0FBQ0FMLEdBQUVNLElBQUYsQ0FBTyxLQUFLQyxJQUFaLEVBQWtCLFlBQVc7QUFDNUJGLE9BQUssSUFBTCxJQUFhLElBQWI7QUFDQSxFQUZEO0FBR0EsS0FBSUcsVUFBVUosS0FBVixDQUFKLEVBQXNCO0FBQ3JCSixJQUFFTSxJQUFGLENBQU8sS0FBS0MsSUFBWixFQUFrQixZQUFXO0FBQzVCLE9BQUlILE1BQU0sSUFBTixDQUFKLEVBQWlCO0FBQ2hCQyxTQUFLLElBQUwsSUFBYUQsTUFBTSxJQUFOLENBQWI7QUFDQTtBQUNE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S2pCLE1BQUwsR0FBYyxLQUFLQSxNQUFMLEdBQWMsR0FBNUIsR0FBa0MsRUFBL0M7QUFDQSxNQUFJa0IsTUFBTSxLQUFLVCxJQUFMLEdBQVksT0FBT00sSUFBUCxHQUFjLEtBQUtOLElBQW5CLEdBQTBCRSxJQUF0QyxHQUE2QyxFQUF2RDtBQUNBLE9BQUtWLEdBQUwsR0FBV2dCLFNBQVNDLEdBQVQsR0FBZSxLQUFLcEMsSUFBcEIsR0FBMkIsS0FBS0ssS0FBaEMsSUFBeUMsS0FBSzJCLElBQUwsR0FBWSxLQUFLQSxJQUFqQixHQUF3QixFQUFqRSxDQUFYO0FBQ0EsU0FBTyxLQUFLYixHQUFaO0FBQ0E7QUFuRHNCLENBQXhCO0FBcURBa0IsT0FBT0MsT0FBUCxHQUFpQmhELEdBQWpCIiwiZmlsZSI6IlVSTC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0ICZjb3B5OyAyMDE3IE1hcmtldCBBY3VtZW4sIEluYy5cbiAqL1xuY29uc3QgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG5jb25zdCBaZXNrID0gcmVxdWlyZShcIi4vWmVza1wiKTtcblxudmFyIFVSTCA9IGZ1bmN0aW9uKG1peGVkKSB7XG5cdFwidXNlIHN0cmljdFwiO1xuXHR2YXIgc2VsZiA9IHRoaXM7XG5cdCQuZWFjaCh0aGlzLmtleXMsIGZ1bmN0aW9uKCkge1xuXHRcdHNlbGZbdGhpc10gPSBudWxsO1xuXHR9KTtcblx0aWYgKGlzX29iamVjdChtaXhlZCkpIHtcblx0XHQkLmVhY2godGhpcy5rZXlzLCBmdW5jdGlvbigpIHtcblx0XHRcdGlmIChtaXhlZFt0aGlzXSkge1xuXHRcdFx0XHRzZWxmW3RoaXNdID0gbWl4ZWRbdGhpc107XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0gZWxzZSBpZiAoemVzay5pc191cmwobWl4ZWQpKSB7XG5cdFx0dGhpcy5wYXJzZShtaXhlZCk7XG5cdH0gZWxzZSBpZiAoemVzay5pc19zdHJpbmcobWl4ZWQpKSB7XG5cdFx0dGhpcy5wYXRoID0gbWl4ZWQ7XG5cdH1cbn07XG4kLmV4dGVuZChVUkwucHJvdG90eXBlLCB7XG5cdGtleXM6IFtcInVybFwiLCBcInNjaGVtZVwiLCBcInVzZXJcIiwgXCJwYXNzXCIsIFwiaG9zdFwiLCBcInBvcnRcIiwgXCJwYXRoXCIsIFwicXVlcnlcIiwgXCJoYXNoXCJdLFxuXHRfcXVlcnk6IGZ1bmN0aW9uKG1peGVkKSB7XG5cdFx0aWYgKG1peGVkID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHJldHVybiB0aGlzLnF1ZXJ5IHx8IG51bGw7XG5cdFx0fVxuXHRcdGlmICh6ZXNrLmlzX3N0cmluZyhtaXhlZCkpIHtcblx0XHRcdGlmIChtaXhlZC5jaGFyQXQoMCkgIT09IFwiP1wiKSB7XG5cdFx0XHRcdG1peGVkID0gXCI/XCIgKyBtaXhlZDtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKHplc2suaXNfb2JqZWN0KG1peGVkKSkge1xuXHRcdFx0dmFyIGl0ZW1zID0gW107XG5cdFx0XHQkLmVhY2gobWl4ZWQsIGZ1bmN0aW9uKGspIHtcblx0XHRcdFx0aWYgKHRoaXMgPT09IG51bGwgfHwgdGhpcyA9PT0gdW5kZWZpbmVkIHx8IHRoaXMgPT09IFwiXCIpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0aXRlbXMucHVzaChlbmNvZGVVUklDb21wb25lbnQoaykgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCh0aGlzKSk7XG5cdFx0XHR9KTtcblx0XHRcdG1peGVkID0gXCI/XCIgKyBpdGVtcy5qb2luKFwiJlwiKTtcblx0XHR9XG5cdFx0dGhpcy5xdWVyeSA9IG1peGVkO1xuXHRcdHRoaXMudW5wYXJzZSgpO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXHRkZWZhdWx0X3BvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBwb3J0cyA9IHtcblx0XHRcdGh0dHA6IDgwLFxuXHRcdFx0aHR0cHM6IDQ0Myxcblx0XHRcdGZ0cDogMjEsXG5cdFx0fTtcblx0XHRyZXR1cm4gcG9ydHNbdGhpcy5zY2hlbWVdIHx8IG51bGw7XG5cdH0sXG5cdHBhcnNlOiBmdW5jdGlvbih1cmwpIHtcblx0XHR2YXIgcGFyc2VyID0gZC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcblx0XHRwYXJzZXIuaHJlZiA9IHVybDtcblx0XHR0aGlzLnVybCA9IHVybDtcblx0XHR0aGlzLnNjaGVtZSA9IFN0cmluZyhwYXJzZXIucHJvdG9jb2wpLnJlcGxhY2UoLzokLywgXCJcIik7XG5cdFx0dGhpcy5ob3N0ID0gcGFyc2VyLmhvc3RuYW1lO1xuXHRcdHRoaXMucG9ydCA9IHBhcnNlci5wb3J0O1xuXHRcdHRoaXMucGF0aCA9IHBhcnNlci5wYXRobmFtZTtcblx0XHR0aGlzLnF1ZXJ5ID0gcGFyc2VyLnNlYXJjaDtcblx0XHR0aGlzLmhhc2ggPSBwYXJzZXIuaGFzaDtcblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblx0dW5wYXJzZTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHVzZXIgPSB0aGlzLnVzZXIgPyB0aGlzLnVzZXIgKyAodGhpcy5wYXNzID8gXCI6XCIgKyB0aGlzLnBhc3MgOiBcIlwiKSArIFwiQFwiIDogXCJcIjtcblx0XHR2YXIgcG9ydCA9IHRoaXMucG9ydCA/ICh0aGlzLnBvcnQgPT09IHRoaXMuZGVmYXVsdF9wb3J0KCkgPyBcIlwiIDogXCI6XCIgKyB0aGlzLnBvcnQpIDogXCJcIjtcblx0XHR2YXIgcHJlZml4ID0gdGhpcy5zY2hlbWUgPyB0aGlzLnNjaGVtZSArIFwiOlwiIDogXCJcIjtcblx0XHR2YXIgdWhwID0gdGhpcy5ob3N0ID8gXCIvL1wiICsgdXNlciArIHRoaXMuaG9zdCArIHBvcnQgOiBcIlwiO1xuXHRcdHRoaXMudXJsID0gcHJlZml4ICsgdWhwICsgdGhpcy5wYXRoICsgdGhpcy5xdWVyeSArICh0aGlzLmhhc2ggPyB0aGlzLmhhc2ggOiBcIlwiKTtcblx0XHRyZXR1cm4gdGhpcy51cmw7XG5cdH0sXG59KTtcbm1vZHVsZS5leHBvcnRzID0gVVJMO1xuIl19