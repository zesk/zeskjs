"use strict";

var _DateTools$units;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Copyright &copy; 2017 Market Acumen, Inc.
 */
//const _ = require("lodash");
var Zesk = require("./Zesk");
var Locale = require("./Locale");

function zero(x) {
	if (x < 10) {
		return "0" + x;
	}
	return String(x);
}

var DateTools = {
	toString: function toString(d) {
		return d.getUTCFullYear() + "-" + zero(d.getUTCMonth() + 1) + "-" + zero(d.getUTCDate()) + " " + zero(d.getUTCHours()) + ":" + zero(d.getUTCMinutes()) + ":" + zero(d.getUTCSeconds());
	},
	MILLISECOND: "millisecond",
	SECOND: "second",
	MINUTE: "minute",
	HOUR: "hour",
	DAY: "day",
	WEEK: "week",
	MONTH: "month",
	QUARTER: "quarter",
	YEAR: "year"
};

var SECONDS_IN_MINUTE = 60;
var MINUTES_IN_HOUR = 60;
var HOURS_IN_DAY = 24;
var DAYS_PER_WEEK = 7;
var DAYS_IN_YEAR = 365;
var MONTHS_IN_YEAR = 12;
var QUARTERS_IN_YEAR = 4;

var SECONDS_IN_HOUR = SECONDS_IN_MINUTE * MINUTES_IN_HOUR;
var SECONDS_IN_DAY = SECONDS_IN_HOUR * HOURS_IN_DAY;
var SECONDS_IN_WEEK = SECONDS_IN_DAY * DAYS_PER_WEEK;
var SECONDS_IN_YEAR = SECONDS_IN_DAY * DAYS_IN_YEAR;

DateTools.units = (_DateTools$units = {}, _defineProperty(_DateTools$units, DateTools.MILLISECOND, 0.001), _defineProperty(_DateTools$units, DateTools.SECOND, 1), _defineProperty(_DateTools$units, DateTools.MINUTE, SECONDS_IN_MINUTE), _defineProperty(_DateTools$units, DateTools.HOUR, SECONDS_IN_HOUR), _defineProperty(_DateTools$units, DateTools.DAY, SECONDS_IN_DAY), _defineProperty(_DateTools$units, DateTools.WEEK, SECONDS_IN_WEEK), _defineProperty(_DateTools$units, DateTools.YEAR, SECONDS_IN_YEAR), _defineProperty(_DateTools$units, DateTools.MONTH, SECONDS_IN_YEAR / MONTHS_IN_YEAR), _defineProperty(_DateTools$units, DateTools.QUARTER, SECONDS_IN_YEAR / QUARTERS_IN_YEAR), _DateTools$units);

DateTools.findUnit = function (seconds) {
	var last = DateTools.MILLISECONDS;
	return Zesk.each(DateTools.units, function (sec, unit) {
		if (seconds < sec) {
			return last;
		}
		last = sec;
		return null;
	});
};

DateTools.toUnit = function (seconds, unit) {
	if (!DateTools.units[unit]) {
		throw new Error("Unknown unit " + unit + " in DateTools.toUnit");
	}
	return parseFloat(seconds) / DateTools.units[unit];
};

module.exports = DateTools;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9EYXRlVG9vbHMuanMiXSwibmFtZXMiOlsiWmVzayIsInJlcXVpcmUiLCJMb2NhbGUiLCJ6ZXJvIiwieCIsIlN0cmluZyIsIkRhdGVUb29scyIsInRvU3RyaW5nIiwiZCIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsIk1JTExJU0VDT05EIiwiU0VDT05EIiwiTUlOVVRFIiwiSE9VUiIsIkRBWSIsIldFRUsiLCJNT05USCIsIlFVQVJURVIiLCJZRUFSIiwiU0VDT05EU19JTl9NSU5VVEUiLCJNSU5VVEVTX0lOX0hPVVIiLCJIT1VSU19JTl9EQVkiLCJEQVlTX1BFUl9XRUVLIiwiREFZU19JTl9ZRUFSIiwiTU9OVEhTX0lOX1lFQVIiLCJRVUFSVEVSU19JTl9ZRUFSIiwiU0VDT05EU19JTl9IT1VSIiwiU0VDT05EU19JTl9EQVkiLCJTRUNPTkRTX0lOX1dFRUsiLCJTRUNPTkRTX0lOX1lFQVIiLCJ1bml0cyIsImZpbmRVbml0Iiwic2Vjb25kcyIsImxhc3QiLCJNSUxMSVNFQ09ORFMiLCJlYWNoIiwic2VjIiwidW5pdCIsInRvVW5pdCIsIkVycm9yIiwicGFyc2VGbG9hdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7QUFHQTtBQUNBLElBQU1BLE9BQU9DLFFBQVEsUUFBUixDQUFiO0FBQ0EsSUFBTUMsU0FBU0QsUUFBUSxVQUFSLENBQWY7O0FBRUEsU0FBU0UsSUFBVCxDQUFjQyxDQUFkLEVBQWlCO0FBQ2hCLEtBQUlBLElBQUksRUFBUixFQUFZO0FBQ1gsU0FBTyxNQUFNQSxDQUFiO0FBQ0E7QUFDRCxRQUFPQyxPQUFPRCxDQUFQLENBQVA7QUFDQTs7QUFFRCxJQUFJRSxZQUFZO0FBQ2ZDLFdBQVUsa0JBQVNDLENBQVQsRUFBWTtBQUNyQixTQUNDQSxFQUFFQyxjQUFGLEtBQ0EsR0FEQSxHQUVBTixLQUFLSyxFQUFFRSxXQUFGLEtBQWtCLENBQXZCLENBRkEsR0FHQSxHQUhBLEdBSUFQLEtBQUtLLEVBQUVHLFVBQUYsRUFBTCxDQUpBLEdBS0EsR0FMQSxHQU1BUixLQUFLSyxFQUFFSSxXQUFGLEVBQUwsQ0FOQSxHQU9BLEdBUEEsR0FRQVQsS0FBS0ssRUFBRUssYUFBRixFQUFMLENBUkEsR0FTQSxHQVRBLEdBVUFWLEtBQUtLLEVBQUVNLGFBQUYsRUFBTCxDQVhEO0FBYUEsRUFmYztBQWdCZkMsY0FBYSxhQWhCRTtBQWlCZkMsU0FBUSxRQWpCTztBQWtCZkMsU0FBUSxRQWxCTztBQW1CZkMsT0FBTSxNQW5CUztBQW9CZkMsTUFBSyxLQXBCVTtBQXFCZkMsT0FBTSxNQXJCUztBQXNCZkMsUUFBTyxPQXRCUTtBQXVCZkMsVUFBUyxTQXZCTTtBQXdCZkMsT0FBTTtBQXhCUyxDQUFoQjs7QUEyQkEsSUFBTUMsb0JBQW9CLEVBQTFCO0FBQ0EsSUFBTUMsa0JBQWtCLEVBQXhCO0FBQ0EsSUFBTUMsZUFBZSxFQUFyQjtBQUNBLElBQU1DLGdCQUFnQixDQUF0QjtBQUNBLElBQU1DLGVBQWUsR0FBckI7QUFDQSxJQUFNQyxpQkFBaUIsRUFBdkI7QUFDQSxJQUFNQyxtQkFBbUIsQ0FBekI7O0FBRUEsSUFBTUMsa0JBQWtCUCxvQkFBb0JDLGVBQTVDO0FBQ0EsSUFBTU8saUJBQWlCRCxrQkFBa0JMLFlBQXpDO0FBQ0EsSUFBTU8sa0JBQWtCRCxpQkFBaUJMLGFBQXpDO0FBQ0EsSUFBTU8sa0JBQWtCRixpQkFBaUJKLFlBQXpDOztBQUVBdEIsVUFBVTZCLEtBQVYsNkRBQ0U3QixVQUFVUyxXQURaLEVBQzBCLEtBRDFCLHFDQUVFVCxVQUFVVSxNQUZaLEVBRXFCLENBRnJCLHFDQUdFVixVQUFVVyxNQUhaLEVBR3FCTyxpQkFIckIscUNBSUVsQixVQUFVWSxJQUpaLEVBSW1CYSxlQUpuQixxQ0FLRXpCLFVBQVVhLEdBTFosRUFLa0JhLGNBTGxCLHFDQU1FMUIsVUFBVWMsSUFOWixFQU1tQmEsZUFObkIscUNBT0UzQixVQUFVaUIsSUFQWixFQU9tQlcsZUFQbkIscUNBUUU1QixVQUFVZSxLQVJaLEVBUW9CYSxrQkFBa0JMLGNBUnRDLHFDQVNFdkIsVUFBVWdCLE9BVFosRUFTc0JZLGtCQUFrQkosZ0JBVHhDOztBQVlBeEIsVUFBVThCLFFBQVYsR0FBcUIsVUFBU0MsT0FBVCxFQUFrQjtBQUN0QyxLQUFJQyxPQUFPaEMsVUFBVWlDLFlBQXJCO0FBQ0EsUUFBT3ZDLEtBQUt3QyxJQUFMLENBQVVsQyxVQUFVNkIsS0FBcEIsRUFBMkIsVUFBQ00sR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDaEQsTUFBSUwsVUFBVUksR0FBZCxFQUFtQjtBQUNsQixVQUFPSCxJQUFQO0FBQ0E7QUFDREEsU0FBT0csR0FBUDtBQUNBLFNBQU8sSUFBUDtBQUNBLEVBTk0sQ0FBUDtBQU9BLENBVEQ7O0FBV0FuQyxVQUFVcUMsTUFBVixHQUFtQixVQUFTTixPQUFULEVBQWtCSyxJQUFsQixFQUF3QjtBQUMxQyxLQUFJLENBQUNwQyxVQUFVNkIsS0FBVixDQUFnQk8sSUFBaEIsQ0FBTCxFQUE0QjtBQUMzQixRQUFNLElBQUlFLEtBQUosQ0FBVSxrQkFBa0JGLElBQWxCLEdBQXlCLHNCQUFuQyxDQUFOO0FBQ0E7QUFDRCxRQUFPRyxXQUFXUixPQUFYLElBQXNCL0IsVUFBVTZCLEtBQVYsQ0FBZ0JPLElBQWhCLENBQTdCO0FBQ0EsQ0FMRDs7QUFPQUksT0FBT0MsT0FBUCxHQUFpQnpDLFNBQWpCIiwiZmlsZSI6IkRhdGVUb29scy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0ICZjb3B5OyAyMDE3IE1hcmtldCBBY3VtZW4sIEluYy5cbiAqL1xuLy9jb25zdCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcbmNvbnN0IFplc2sgPSByZXF1aXJlKFwiLi9aZXNrXCIpO1xuY29uc3QgTG9jYWxlID0gcmVxdWlyZShcIi4vTG9jYWxlXCIpO1xuXG5mdW5jdGlvbiB6ZXJvKHgpIHtcblx0aWYgKHggPCAxMCkge1xuXHRcdHJldHVybiBcIjBcIiArIHg7XG5cdH1cblx0cmV0dXJuIFN0cmluZyh4KTtcbn1cblxudmFyIERhdGVUb29scyA9IHtcblx0dG9TdHJpbmc6IGZ1bmN0aW9uKGQpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0ZC5nZXRVVENGdWxsWWVhcigpICtcblx0XHRcdFwiLVwiICtcblx0XHRcdHplcm8oZC5nZXRVVENNb250aCgpICsgMSkgK1xuXHRcdFx0XCItXCIgK1xuXHRcdFx0emVybyhkLmdldFVUQ0RhdGUoKSkgK1xuXHRcdFx0XCIgXCIgK1xuXHRcdFx0emVybyhkLmdldFVUQ0hvdXJzKCkpICtcblx0XHRcdFwiOlwiICtcblx0XHRcdHplcm8oZC5nZXRVVENNaW51dGVzKCkpICtcblx0XHRcdFwiOlwiICtcblx0XHRcdHplcm8oZC5nZXRVVENTZWNvbmRzKCkpXG5cdFx0KTtcblx0fSxcblx0TUlMTElTRUNPTkQ6IFwibWlsbGlzZWNvbmRcIixcblx0U0VDT05EOiBcInNlY29uZFwiLFxuXHRNSU5VVEU6IFwibWludXRlXCIsXG5cdEhPVVI6IFwiaG91clwiLFxuXHREQVk6IFwiZGF5XCIsXG5cdFdFRUs6IFwid2Vla1wiLFxuXHRNT05USDogXCJtb250aFwiLFxuXHRRVUFSVEVSOiBcInF1YXJ0ZXJcIixcblx0WUVBUjogXCJ5ZWFyXCIsXG59O1xuXG5jb25zdCBTRUNPTkRTX0lOX01JTlVURSA9IDYwO1xuY29uc3QgTUlOVVRFU19JTl9IT1VSID0gNjA7XG5jb25zdCBIT1VSU19JTl9EQVkgPSAyNDtcbmNvbnN0IERBWVNfUEVSX1dFRUsgPSA3O1xuY29uc3QgREFZU19JTl9ZRUFSID0gMzY1O1xuY29uc3QgTU9OVEhTX0lOX1lFQVIgPSAxMjtcbmNvbnN0IFFVQVJURVJTX0lOX1lFQVIgPSA0O1xuXG5jb25zdCBTRUNPTkRTX0lOX0hPVVIgPSBTRUNPTkRTX0lOX01JTlVURSAqIE1JTlVURVNfSU5fSE9VUjtcbmNvbnN0IFNFQ09ORFNfSU5fREFZID0gU0VDT05EU19JTl9IT1VSICogSE9VUlNfSU5fREFZO1xuY29uc3QgU0VDT05EU19JTl9XRUVLID0gU0VDT05EU19JTl9EQVkgKiBEQVlTX1BFUl9XRUVLO1xuY29uc3QgU0VDT05EU19JTl9ZRUFSID0gU0VDT05EU19JTl9EQVkgKiBEQVlTX0lOX1lFQVI7XG5cbkRhdGVUb29scy51bml0cyA9IHtcblx0W0RhdGVUb29scy5NSUxMSVNFQ09ORF06IDAuMDAxLFxuXHRbRGF0ZVRvb2xzLlNFQ09ORF06IDEsXG5cdFtEYXRlVG9vbHMuTUlOVVRFXTogU0VDT05EU19JTl9NSU5VVEUsXG5cdFtEYXRlVG9vbHMuSE9VUl06IFNFQ09ORFNfSU5fSE9VUixcblx0W0RhdGVUb29scy5EQVldOiBTRUNPTkRTX0lOX0RBWSxcblx0W0RhdGVUb29scy5XRUVLXTogU0VDT05EU19JTl9XRUVLLFxuXHRbRGF0ZVRvb2xzLllFQVJdOiBTRUNPTkRTX0lOX1lFQVIsXG5cdFtEYXRlVG9vbHMuTU9OVEhdOiBTRUNPTkRTX0lOX1lFQVIgLyBNT05USFNfSU5fWUVBUixcblx0W0RhdGVUb29scy5RVUFSVEVSXTogU0VDT05EU19JTl9ZRUFSIC8gUVVBUlRFUlNfSU5fWUVBUixcbn07XG5cbkRhdGVUb29scy5maW5kVW5pdCA9IGZ1bmN0aW9uKHNlY29uZHMpIHtcblx0dmFyIGxhc3QgPSBEYXRlVG9vbHMuTUlMTElTRUNPTkRTO1xuXHRyZXR1cm4gWmVzay5lYWNoKERhdGVUb29scy51bml0cywgKHNlYywgdW5pdCkgPT4ge1xuXHRcdGlmIChzZWNvbmRzIDwgc2VjKSB7XG5cdFx0XHRyZXR1cm4gbGFzdDtcblx0XHR9XG5cdFx0bGFzdCA9IHNlYztcblx0XHRyZXR1cm4gbnVsbDtcblx0fSk7XG59O1xuXG5EYXRlVG9vbHMudG9Vbml0ID0gZnVuY3Rpb24oc2Vjb25kcywgdW5pdCkge1xuXHRpZiAoIURhdGVUb29scy51bml0c1t1bml0XSkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIlVua25vd24gdW5pdCBcIiArIHVuaXQgKyBcIiBpbiBEYXRlVG9vbHMudG9Vbml0XCIpO1xuXHR9XG5cdHJldHVybiBwYXJzZUZsb2F0KHNlY29uZHMpIC8gRGF0ZVRvb2xzLnVuaXRzW3VuaXRdO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBEYXRlVG9vbHM7XG4iXX0=