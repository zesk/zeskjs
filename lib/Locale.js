"use strict";

/**
 * Copyright &copy; 2017 Market Acumen, Inc.
 */
var Zesk = require("./Zesk");
var DateTools = require("./DateTools");

var Locale = {},
    is_object = Zesk.is_object,
    to_string = Zesk.to_string,
    avalue = Zesk.avalue,
    plural_en = function plural_en(s, count) {
	count = parseInt(count, 10);
	if (count === 1) {
		return s;
	}
	var ess = Locale.translate("plural:=" + s.toLowerCase(), "en", null);
	if (ess) {
		return Locale.case_match_simple(ess, s);
	}
	var s1 = s.substring(s.length - 1);
	switch (s1) {
		case "x":
			return s + "es";
		case "y":
			return s.substring(0, s.length - 1) + "ies";
		default:
			break;
	}
	return s + "s";
};
Locale = {
	plural: function plural(s, n, locale) {
		n = n || 2;
		if (Locale.language(locale) === "en") {
			return plural_en(s, n);
		} else {
			return plural_en(s, n);
		}
	},
	plural_n: function plural_n(s, n, locale) {
		return n + " " + Locale.plural(s, n, locale);
	},
	locale: function locale(set) {
		if (set) {
			return Zesk.set("locale", set);
		}
		return Zesk.get("locale", "en_US");
	},
	language: function language() {
		var x = to_string(arguments[0] || Locale.locale());
		return x.left("_", "en").toLowerCase();
	},
	ordinal: function ordinal(n) {
		return n + Locale.ordinal_suffix(n);
	},
	ordinal_suffix: function ordinal_suffix(n) {
		var m10 = n % 10,
		    m100 = n % 100;
		if (m100 > 10 && m100 < 20) {
			return "th";
		}
		return avalue({ 1: "st", 2: "nd", 3: "rd" }, m10, "th");
	},
	translation: function translation(locale, map) {
		var tt = Zesk.get("translation-table", {});
		locale = locale.toLowerCase();
		if (!tt[locale]) {
			tt[locale] = {};
		}
		for (var k in map) {
			if (map.hasOwnProperty(k)) {
				tt[locale][k] = map[k].toString();
			}
		}
		Zesk.set("translation-table", tt);
	},
	translate: function translate(string, locale) {
		var text = string.toString(),
		    phrase = string.right(":=", string),
		    tt = Zesk.get("translation-table"),
		    r = void 0,
		    _default = arguments.length > 2 ? arguments[2] : phrase;

		locale = locale || Locale.locale();
		tt = [avalue(tt, locale, {}), avalue(tt, Locale.language(locale), {})];
		r = Zesk.each(tt, function (i, t) {
			//	console.log('tried ', text, i, t, t[text]);
			return t[text] || null;
		});
		if (r) {
			return r;
		}
		r = Zesk.each(tt, function (i, t) {
			//	console.log('tried ', phrase, i, t, t[phrase]);
			return t[phrase] || null;
		});
		if (r) {
			return r;
		}
		r = Zesk.each(tt, function (i, t) {
			//	console.log('tried ', phrase.toLowerCase(), i, t, t[phrase.toLowerCase()]);
			return t[phrase.toLowerCase()] || null;
		});
		if (r) {
			return Locale.case_match_simple(r, phrase);
		}
		return _default;
	},
	case_match_simple: function case_match_simple(string, pattern) {
		var char1 = pattern.substr(0, 1);
		var char2 = pattern.substr(1, 1);
		if (char1 === char1.toLowerCase(char1)) {
			return string.toLowerCase();
		} else if (char2 === char2.toLowerCase()) {
			return string.substring(0, 1).toUpperCase() + string.substring(1).toLowerCase();
		} else {
			return string.toUpperCase();
		}
	},
	load: function load(locale, tt) {
		var tables = Zesk.get("translation-table", {});
		tables[locale] = tt;
	}
};
Locale.translation("en", {
	"plural:=day": "days",
	"plural:=staff": "staff",
	"plural:=sheep": "sheep",
	"plural:=octopus": "octopi",
	"plural:=news": "news"
});
Locale.__ = function (phrase, map) {
	if (_.isUndefined(phrase)) {
		return "-undefined-value-";
	}
	if (phrase instanceof Object) {
		Zesk.each(phrase, function (k) {
			phrase[k] = Locale.__(phrase[k], map);
		});
		return phrase;
	}
	phrase = Locale.translate(phrase);
	if (!is_object(map)) {
		return phrase;
	}
	return phrase.map(map, true);
};

Locale.durationString = function (delta, min_unit) {
	var number = null;
	if (delta < 0) {
		delta = -delta;
	}
	if (Zesk.is_string(min_unit)) {
		min_unit = DateTools.units[min_unit] || 0;
	}
	Zesk.each(DateTools.units, function (unit, nsecs) {
		if (unit === min_unit || delta > nsecs * 2 - 1) {
			number = parseInt(delta / nsecs, 10);
			return Locale.plural_n(Locale.__(unit), number);
		}
	});
	return {
		duration: Locale.plural_n(Locale.__(DateTools.SECOND), parseInt(delta, 10)),
		number: number
	};
};

/**
 * Output a string like "in 3 days", "5 hours ago"
 *
 * @param {Date} ts
 *        	Date to generate string
 * @param {string} min_unit
 *        	Minimum unit to output
 * @param {string} zero_string
 *        	Optional string if < 1 unit away
 * @return string
 */
Locale.nowString = function (ts, min_unit, zero_string) {
	var now = new Date();
	var delta = (now.getTime() - ts.getTime()) / 1000;

	var _Locale$durationStrin = Locale.durationString(delta, min_unit),
	    duration = _Locale$durationStrin.duration,
	    number = _Locale$durationStrin.number;

	var phrase = null;
	if (number === 0 && Zesk.is_string(zero_string)) {
		phrase = zero_string;
	} else if (delta < 0) {
		phrase = "Locale::now_string:=in {duration}";
	} else {
		phrase = "Locale::now_string:={duration} ago";
	}
	return Locale.__(phrase, {
		duration: duration,
		min_unit: min_unit,
		zero_string: zero_string
	});
};

module.exports = Locale;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Mb2NhbGUuanMiXSwibmFtZXMiOlsiWmVzayIsInJlcXVpcmUiLCJEYXRlVG9vbHMiLCJMb2NhbGUiLCJpc19vYmplY3QiLCJ0b19zdHJpbmciLCJhdmFsdWUiLCJwbHVyYWxfZW4iLCJzIiwiY291bnQiLCJwYXJzZUludCIsImVzcyIsInRyYW5zbGF0ZSIsInRvTG93ZXJDYXNlIiwiY2FzZV9tYXRjaF9zaW1wbGUiLCJzMSIsInN1YnN0cmluZyIsImxlbmd0aCIsInBsdXJhbCIsIm4iLCJsb2NhbGUiLCJsYW5ndWFnZSIsInBsdXJhbF9uIiwic2V0IiwiZ2V0IiwieCIsImFyZ3VtZW50cyIsImxlZnQiLCJvcmRpbmFsIiwib3JkaW5hbF9zdWZmaXgiLCJtMTAiLCJtMTAwIiwidHJhbnNsYXRpb24iLCJtYXAiLCJ0dCIsImsiLCJoYXNPd25Qcm9wZXJ0eSIsInRvU3RyaW5nIiwic3RyaW5nIiwidGV4dCIsInBocmFzZSIsInJpZ2h0IiwiciIsIl9kZWZhdWx0IiwiZWFjaCIsImkiLCJ0IiwicGF0dGVybiIsImNoYXIxIiwic3Vic3RyIiwiY2hhcjIiLCJ0b1VwcGVyQ2FzZSIsImxvYWQiLCJ0YWJsZXMiLCJfXyIsIl8iLCJpc1VuZGVmaW5lZCIsIk9iamVjdCIsImR1cmF0aW9uU3RyaW5nIiwiZGVsdGEiLCJtaW5fdW5pdCIsIm51bWJlciIsImlzX3N0cmluZyIsInVuaXRzIiwidW5pdCIsIm5zZWNzIiwiZHVyYXRpb24iLCJTRUNPTkQiLCJub3dTdHJpbmciLCJ0cyIsInplcm9fc3RyaW5nIiwibm93IiwiRGF0ZSIsImdldFRpbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7QUFHQSxJQUFNQSxPQUFPQyxRQUFRLFFBQVIsQ0FBYjtBQUNBLElBQU1DLFlBQVlELFFBQVEsYUFBUixDQUFsQjs7QUFFQSxJQUFJRSxTQUFTLEVBQWI7QUFBQSxJQUNDQyxZQUFZSixLQUFLSSxTQURsQjtBQUFBLElBRUNDLFlBQVlM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Q0FBZVEsV0FBZixDQUFwQixFQUFpRDtBQUNoRDlCLFdBQVM4QixXQUFUO0FBQ0EsRUFGRCxNQUVPLElBQUlYLFFBQVEsQ0FBWixFQUFlO0FBQ3JCbkIsV0FBUyxtQ0FBVDtBQUNBLEVBRk0sTUFFQTtBQUNOQSxXQUFTLG9DQUFUO0FBQ0E7QUFDRCxRQUFPckMsT0FBT21ELEVBQVAsQ0FBVWQsTUFBVixFQUFrQjtBQUN4QjBCLFlBQVVBLFFBRGM7QUFFeEJOLFlBQVVBLFFBRmM7QUFHeEJVLGVBQWFBO0FBSFcsRUFBbEIsQ0FBUDtBQUtBLENBakJEOztBQW1CQUksT0FBT0MsT0FBUCxHQUFpQnhFLE1BQWpCIiwiZmlsZSI6IkxvY2FsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0ICZjb3B5OyAyMDE3IE1hcmtldCBBY3VtZW4sIEluYy5cbiAqL1xuY29uc3QgWmVzayA9IHJlcXVpcmUoXCIuL1plc2tcIik7XG5jb25zdCBEYXRlVG9vbHMgPSByZXF1aXJlKFwiLi9EYXRlVG9vbHNcIik7XG5cbmxldCBMb2NhbGUgPSB7fSxcblx0aXNfb2JqZWN0ID0gWmVzay5pc19vYmplY3QsXG5cdHRvX3N0cmluZyA9IFplc2sudG9fc3RyaW5nLFxuXHRhdmFsdWUgPSBaZXNrLmF2YWx1ZSxcblx0cGx1cmFsX2VuID0gZnVuY3Rpb24ocywgY291bnQpIHtcblx0XHRjb3VudCA9IHBhcnNlSW50KGNvdW50LCAxMCk7XG5cdFx0aWYgKGNvdW50ID09PSAxKSB7XG5cdFx0XHRyZXR1cm4gcztcblx0XHR9XG5cdFx0bGV0IGVzcyA9IExvY2FsZS50cmFuc2xhdGUoXCJwbHVyYWw6PVwiICsgcy50b0xvd2VyQ2FzZSgpLCBcImVuXCIsIG51bGwpO1xuXHRcdGlmIChlc3MpIHtcblx0XHRcdHJldHVybiBMb2NhbGUuY2FzZV9tYXRjaF9zaW1wbGUoZXNzLCBzKTtcblx0XHR9XG5cdFx0bGV0IHMxID0gcy5zdWJzdHJpbmcocy5sZW5ndGggLSAxKTtcblx0XHRzd2l0Y2ggKHMxKSB7XG5cdFx0XHRjYXNlIFwieFwiOlxuXHRcdFx0XHRyZXR1cm4gcyArIFwiZXNcIjtcblx0XHRcdGNhc2UgXCJ5XCI6XG5cdFx0XHRcdHJldHVybiBzLnN1YnN0cmluZygwLCBzLmxlbmd0aCAtIDEpICsgXCJpZXNcIjtcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0XHRyZXR1cm4gcyArIFwic1wiO1xuXHR9O1xuTG9jYWxlID0ge1xuXHRwbHVyYWw6IGZ1bmN0aW9uIHBsdXJhbChzLCBuLCBsb2NhbGUpIHtcblx0XHRuID0gbiB8fCAyO1xuXHRcdGlmIChMb2NhbGUubGFuZ3VhZ2UobG9jYWxlKSA9PT0gXCJlblwiKSB7XG5cdFx0XHRyZXR1cm4gcGx1cmFsX2VuKHMsIG4pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gcGx1cmFsX2VuKHMsIG4pO1xuXHRcdH1cblx0fSxcblx0cGx1cmFsX246IGZ1bmN0aW9uKHMsIG4sIGxvY2FsZSkge1xuXHRcdHJldHVybiBuICsgXCIgXCIgKyBMb2NhbGUucGx1cmFsKHMsIG4sIGxvY2FsZSk7XG5cdH0sXG5cdGxvY2FsZTogZnVuY3Rpb24oc2V0KSB7XG5cdFx0aWYgKHNldCkge1xuXHRcdFx0cmV0dXJuIFplc2suc2V0KFwibG9jYWxlXCIsIHNldCk7XG5cdFx0fVxuXHRcdHJldHVybiBaZXNrLmdldChcImxvY2FsZVwiLCBcImVuX1VTXCIpO1xuXHR9LFxuXHRsYW5ndWFnZTogZnVuY3Rpb24oKSB7XG5cdFx0bGV0IHggPSB0b19zdHJpbmcoYXJndW1lbnRzWzBdIHx8IExvY2FsZS5sb2NhbGUoKSk7XG5cdFx0cmV0dXJuIHgubGVmdChcIl9cIiwgXCJlblwiKS50b0xvd2VyQ2FzZSgpO1xuXHR9LFxuXHRvcmRpbmFsOiBmdW5jdGlvbihuKSB7XG5cdFx0cmV0dXJuIG4gKyBMb2NhbGUub3JkaW5hbF9zdWZmaXgobik7XG5cdH0sXG5cdG9yZGluYWxfc3VmZml4OiBmdW5jdGlvbihuKSB7XG5cdFx0bGV0IG0xMCA9IG4gJSAxMCxcblx0XHRcdG0xMDAgPSBuICUgMTAwO1xuXHRcdGlmIChtMTAwID4gMTAgJiYgbTEwMCA8IDIwKSB7XG5cdFx0XHRyZXR1cm4gXCJ0aFwiO1xuXHRcdH1cblx0XHRyZXR1cm4gYXZhbHVlKHsgMTogXCJzdFwiLCAyOiBcIm5kXCIsIDM6IFwicmRcIiB9LCBtMTAsIFwidGhcIik7XG5cdH0sXG5cdHRyYW5zbGF0aW9uOiBmdW5jdGlvbihsb2NhbGUsIG1hcCkge1xuXHRcdGxldCB0dCA9IFplc2suZ2V0KFwidHJhbnNsYXRpb24tdGFibGVcIiwge30pO1xuXHRcdGxvY2FsZSA9IGxvY2FsZS50b0xvd2VyQ2FzZSgpO1xuXHRcdGlmICghdHRbbG9jYWxlXSkge1xuXHRcdFx0dHRbbG9jYWxlXSA9IHt9O1xuXHRcdH1cblx0XHRmb3IgKGxldCBrIGluIG1hcCkge1xuXHRcdFx0aWYgKG1hcC5oYXNPd25Qcm9wZXJ0eShrKSkge1xuXHRcdFx0XHR0dFtsb2NhbGVdW2tdID0gbWFwW2tdLnRvU3RyaW5nKCk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdFplc2suc2V0KFwidHJhbnNsYXRpb24tdGFibGVcIiwgdHQpO1xuXHR9LFxuXHR0cmFuc2xhdGU6IGZ1bmN0aW9uKHN0cmluZywgbG9jYWxlKSB7XG5cdFx0bGV0IHRleHQgPSBzdHJpbmcudG9TdHJpbmcoKSxcblx0XHRcdHBocmFzZSA9IHN0cmluZy5yaWdodChcIjo9XCIsIHN0cmluZyksXG5cdFx0XHR0dCA9IFplc2suZ2V0KFwidHJhbnNsYXRpb24tdGFibGVcIiksXG5cdFx0XHRyLFxuXHRcdFx0X2RlZmF1bHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHBocmFzZTtcblxuXHRcdGxvY2FsZSA9IGxvY2FsZSB8fCBMb2NhbGUubG9jYWxlKCk7XG5cdFx0dHQgPSBbYXZhbHVlKHR0LCBsb2NhbGUsIHt9KSwgYXZhbHVlKHR0LCBMb2NhbGUubGFuZ3VhZ2UobG9jYWxlKSwge30pXTtcblx0XHRyID0gWmVzay5lYWNoKHR0LCBmdW5jdGlvbihpLCB0KSB7XG5cdFx0XHQvL1x0Y29uc29sZS5sb2coJ3RyaWVkICcsIHRleHQsIGksIHQsIHRbdGV4dF0pO1xuXHRcdFx0cmV0dXJuIHRbdGV4dF0gfHwgbnVsbDtcblx0XHR9KTtcblx0XHRpZiAocikge1xuXHRcdFx0cmV0dXJuIHI7XG5cdFx0fVxuXHRcdHIgPSBaZXNrLmVhY2godHQsIGZ1bmN0aW9uKGksIHQpIHtcblx0XHRcdC8vXHRjb25zb2xlLmxvZygndHJpZWQgJywgcGhyYXNlLCBpLCB0LCB0W3BocmFzZV0pO1xuXHRcdFx0cmV0dXJuIHRbcGhyYXNlXSB8fCBudWxsO1xuXHRcdH0pO1xuXHRcdGlmIChyKSB7XG5cdFx0XHRyZXR1cm4gcjtcblx0XHR9XG5cdFx0ciA9IFplc2suZWFjaCh0dCwgZnVuY3Rpb24oaSwgdCkge1xuXHRcdFx0Ly9cdGNvbnNvbGUubG9nKCd0cmllZCAnLCBwaHJhc2UudG9Mb3dlckNhc2UoKSwgaSwgdCwgdFtwaHJhc2UudG9Mb3dlckNhc2UoKV0pO1xuXHRcdFx0cmV0dXJuIHRbcGhyYXNlLnRvTG93ZXJDYXNlKCldIHx8IG51bGw7XG5cdFx0fSk7XG5cdFx0aWYgKHIpIHtcblx0XHRcdHJldHVybiBMb2NhbGUuY2FzZV9tYXRjaF9zaW1wbGUociwgcGhyYXNlKTtcblx0XHR9XG5cdFx0cmV0dXJuIF9kZWZhdWx0O1xuXHR9LFxuXHRjYXNlX21hdGNoX3NpbXBsZTogZnVuY3Rpb24oc3RyaW5nLCBwYXR0ZXJuKSB7XG5cdFx0bGV0IGNoYXIxID0gcGF0dGVybi5zdWJzdHIoMCwgMSk7XG5cdFx0bGV0IGNoYXIyID0gcGF0dGVybi5zdWJzdHIoMSwgMSk7XG5cdFx0aWYgKGNoYXIxID09PSBjaGFyMS50b0xvd2VyQ2FzZShjaGFyMSkpIHtcblx0XHRcdHJldHVybiBzdHJpbmcudG9Mb3dlckNhc2UoKTtcblx0XHR9IGVsc2UgaWYgKGNoYXIyID09PSBjaGFyMi50b0xvd2VyQ2FzZSgpKSB7XG5cdFx0XHRyZXR1cm4gc3RyaW5nLnN1YnN0cmluZygwLCAxKS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nLnN1YnN0cmluZygxKS50b0xvd2VyQ2FzZSgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gc3RyaW5nLnRvVXBwZXJDYXNlKCk7XG5cdFx0fVxuXHR9LFxuXHRsb2FkOiBmdW5jdGlvbihsb2NhbGUsIHR0KSB7XG5cdFx0bGV0IHRhYmxlcyA9IFplc2suZ2V0KFwidHJhbnNsYXRpb24tdGFibGVcIiwge30pO1xuXHRcdHRhYmxlc1tsb2NhbGVdID0gdHQ7XG5cdH0sXG59O1xuTG9jYWxlLnRyYW5zbGF0aW9uKFwiZW5cIiwge1xuXHRcInBsdXJhbDo9ZGF5XCI6IFwiZGF5c1wiLFxuXHRcInBsdXJhbDo9c3RhZmZcIjogXCJzdGFmZlwiLFxuXHRcInBsdXJhbDo9c2hlZXBcIjogXCJzaGVlcFwiLFxuXHRcInBsdXJhbDo9b2N0b3B1c1wiOiBcIm9jdG9waVwiLFxuXHRcInBsdXJhbDo9bmV3c1wiOiBcIm5ld3NcIixcbn0pO1xuTG9jYWxlLl9fID0gZnVuY3Rpb24ocGhyYXNlLCBtYXApIHtcblx0aWYgKF8uaXNVbmRlZmluZWQocGhyYXNlKSkge1xuXHRcdHJldHVybiBcIi11bmRlZmluZWQtdmFsdWUtXCI7XG5cdH1cblx0aWYgKHBocmFzZSBpbnN0YW5jZW9mIE9iamVjdCkge1xuXHRcdFplc2suZWFjaChwaHJhc2UsIGZ1bmN0aW9uKGspIHtcblx0XHRcdHBocmFzZVtrXSA9IExvY2FsZS5fXyhwaHJhc2Vba10sIG1hcCk7XG5cdFx0fSk7XG5cdFx0cmV0dXJuIHBocmFzZTtcblx0fVxuXHRwaHJhc2UgPSBMb2NhbGUudHJhbnNsYXRlKHBocmFzZSk7XG5cdGlmICghaXNfb2JqZWN0KG1hcCkpIHtcblx0XHRyZXR1cm4gcGhyYXNlO1xuXHR9XG5cdHJldHVybiBwaHJhc2UubWFwKG1hcCwgdHJ1ZSk7XG59O1xuXG5Mb2NhbGUuZHVyYXRpb25TdHJpbmcgPSBmdW5jdGlvbihkZWx0YSwgbWluX3VuaXQpIHtcblx0bGV0IG51bWJlciA9IG51bGw7XG5cdGlmIChkZWx0YSA8IDApIHtcblx0XHRkZWx0YSA9IC1kZWx0YTtcblx0fVxuXHRpZiAoWmVzay5pc19zdHJpbmcobWluX3VuaXQpKSB7XG5cdFx0bWluX3VuaXQgPSBEYXRlVG9vbHMudW5pdHNbbWluX3VuaXRdIHx8IDA7XG5cdH1cblx0WmVzay5lYWNoKERhdGVUb29scy51bml0cywgZnVuY3Rpb24odW5pdCwgbnNlY3MpIHtcblx0XHRpZiAodW5pdCA9PT0gbWluX3VuaXQgfHwgZGVsdGEgPiBuc2VjcyAqIDIgLSAxKSB7XG5cdFx0XHRudW1iZXIgPSBwYXJzZUludChkZWx0YSAvIG5zZWNzLCAxMCk7XG5cdFx0XHRyZXR1cm4gTG9jYWxlLnBsdXJhbF9uKExvY2FsZS5fXyh1bml0KSwgbnVtYmVyKTtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4ge1xuXHRcdGR1cmF0aW9uOiBMb2NhbGUucGx1cmFsX24oTG9jYWxlLl9fKERhdGVUb29scy5TRUNPTkQpLCBwYXJzZUludChkZWx0YSwgMTApKSxcblx0XHRudW1iZXI6IG51bWJlcixcblx0fTtcbn07XG5cbi8qKlxuICogT3V0cHV0IGEgc3RyaW5nIGxpa2UgXCJpbiAzIGRheXNcIiwgXCI1IGhvdXJzIGFnb1wiXG4gKlxuICogQHBhcmFtIHtEYXRlfSB0c1xuICogICAgICAgIFx0RGF0ZSB0byBnZW5lcmF0ZSBzdHJpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBtaW5fdW5pdFxuICogICAgICAgIFx0TWluaW11bSB1bml0IHRvIG91dHB1dFxuICogQHBhcmFtIHtzdHJpbmd9IHplcm9fc3RyaW5nXG4gKiAgICAgICAgXHRPcHRpb25hbCBzdHJpbmcgaWYgPCAxIHVuaXQgYXdheVxuICogQHJldHVybiBzdHJpbmdcbiAqL1xuTG9jYWxlLm5vd1N0cmluZyA9IGZ1bmN0aW9uKHRzLCBtaW5fdW5pdCwgemVyb19zdHJpbmcpIHtcblx0bGV0IG5vdyA9IG5ldyBEYXRlKCk7XG5cdGxldCBkZWx0YSA9IChub3cuZ2V0VGltZSgpIC0gdHMuZ2V0VGltZSgpKSAvIDEwMDA7XG5cdGxldCB7IGR1cmF0aW9uLCBudW1iZXIgfSA9IExvY2FsZS5kdXJhdGlvblN0cmluZyhkZWx0YSwgbWluX3VuaXQpO1xuXHRsZXQgcGhyYXNlID0gbnVsbDtcblx0aWYgKG51bWJlciA9PT0gMCAmJiBaZXNrLmlzX3N0cmluZyh6ZXJvX3N0cmluZykpIHtcblx0XHRwaHJhc2UgPSB6ZXJvX3N0cmluZztcblx0fSBlbHNlIGlmIChkZWx0YSA8IDApIHtcblx0XHRwaHJhc2UgPSBcIkxvY2FsZTo6bm93X3N0cmluZzo9aW4ge2R1cmF0aW9ufVwiO1xuXHR9IGVsc2Uge1xuXHRcdHBocmFzZSA9IFwiTG9jYWxlOjpub3dfc3RyaW5nOj17ZHVyYXRpb259IGFnb1wiO1xuXHR9XG5cdHJldHVybiBMb2NhbGUuX18ocGhyYXNlLCB7XG5cdFx0ZHVyYXRpb246IGR1cmF0aW9uLFxuXHRcdG1pbl91bml0OiBtaW5fdW5pdCxcblx0XHR6ZXJvX3N0cmluZzogemVyb19zdHJpbmcsXG5cdH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBMb2NhbGU7XG4iXX0=